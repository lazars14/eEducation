create database eeducation;

use eeducation;

create table authority
(
	id int primary key auto_increment not null,
	name varchar(20)
);

create table user
(
	id int primary key auto_increment not null,
	email varchar(50) unique,
	u_password varchar(100)
);

create table user_authority
(
	id int primary key auto_increment not null,
	user_id int,
	authority_id int,
	
	Foreign Key (user_id) References user(id),
	Foreign Key (authority_id) References authority(id)
);

create table class
(
	id int primary key auto_increment not null,
	name varchar(50),
	num_of_years int
);

create table student
(
	id int primary key auto_increment not null,
	index_number varchar(15) unique,
	firstname varchar(20),
	lastname varchar(20),
	account_number char(18) unique,
	reference_number varchar(30) unique,
	stud_year int,
	stud_year_ord_num int,
	email varchar(30) unique,
	s_password varchar(100),
	class_id int,
	espb_points int,

	Foreign Key (class_id) References class(id)
);

create table teacher_rank
(
	id int primary key auto_increment not null,
	name varchar(30)
);

create table teacher
(
	id int primary key auto_increment not null,
	firstname varchar(20),
	lastname varchar(20),
	email varchar(30) unique,
	s_password varchar(100),
	teacher_rank integer,

	Foreign Key (teacher_rank) References teacher_rank(id)
);

create table course
(
	id int primary key auto_increment not null,
	name varchar(50),
	description varchar(1000),
	espb_points int,
	teacher_id int,

	Foreign Key (teacher_id) References teacher(id)
);

create table student_attends_course
(
	id int primary key auto_increment not null,
	student_id int,
	course_id int,

	Foreign Key (student_id) References student(id),
	Foreign Key (course_id) References course(id)
);

create table teacher_teaches_course
(
	id int primary key auto_increment not null,
	teacher_id int,
	course_id int,

	Foreign Key (teacher_id) References teacher(id),
	Foreign Key (course_id) References course(id)
);

create table course_lesson
(
	id int primary key auto_increment not null,
	name varchar(50),
	description varchar(100),
	course_id int,

	Foreign Key (course_id) References course(id)	
);

create table student_document
(
	id int primary key auto_increment not null,
	document_name varchar(100),
	document_type varchar(30),
	document_url varchar(200),
	mime_type varchar(30),
	student_id int,
	course_id int,
	
	Foreign Key (student_id) References student(id),
	Foreign Key (course_id) References course(id)
);

create table course_file
(
	id int primary key auto_increment not null,
	document_name varchar(100),
	document_type varchar(30),
	document_url varchar(200),
	mime_type varchar(30),
	course_lesson_id int,
    course_id int,
	
	Foreign Key (course_lesson_id) References course_lesson(id),
    Foreign Key (course_id) References course(id)
);

create table payment
(
	id int primary key auto_increment not null,
	student_id int,
	amount float,
	cause varchar(100),
	payment_date datetime,
	owes bit,
	
	Foreign Key (student_id) References student(id)
);

create table colloquium
(
	id int primary key auto_increment not null,
	course_id int,
	max_points float,
	exam_type varchar(30),
	exam_date_time datetime,

	Foreign Key (course_id) References course(id)
);

create table colloquium_result
(
	id int primary key auto_increment not null,
	points float,
	colloquium_id int,
	student_id int,
	document_id int,		

	Foreign Key (colloquium_id) References colloquium(id),
	Foreign Key (student_id) References student(id),
	Foreign Key (document_id) References student_document(id)
);

create table grade
(
	id int primary key auto_increment not null,
	points float,
	grade int,
	course_id int,
	student_id int,

	Foreign Key (course_id) References course(id),
	Foreign Key (student_id) References student(id)
);

create table exam_period
(
	id int primary key auto_increment not null,
	name varchar(50),
	start_date datetime,
	end_date datetime
);

create table exam_term
(
	id int primary key auto_increment not null,
	exam_date datetime,
	class_room varchar(100),
	course_id int,
	exam_period_id int,
	
	Foreign Key (course_id) References course(id),
	Foreign Key (exam_period_id) References exam_period(id)
);

create table student_exam_entry
(
	id int primary key auto_increment not null,	
	student_id int,
	exam_term_id int,
	grade_id int,

	Foreign Key (student_id) References student(id),
	Foreign Key (exam_term_id) References exam_term(id),
	Foreign Key (grade_id) References grade(id)	
);

create table notification
(
	id int primary key auto_increment not null,
	message varchar(300),
    n_date datetime,
	course_id int,
	document_id int,
	seen bit,
	student_id int,

	Foreign Key (course_id) References course(id),
	Foreign Key (document_id) References course_file(id),
	Foreign Key (student_id) References student(id)
);